// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/go-chi/chi"
	"github.com/google/wire"

	"github.com/ZupIT/horusec-admin/internal/business"
	"github.com/ZupIT/horusec-admin/internal/kubernetes"
	"github.com/ZupIT/horusec-admin/internal/router"
	"github.com/ZupIT/horusec-admin/pkg/core"
)

// Injectors from wire.go:

func newRouter() (chi.Router, error) {
	config, err := kubernetes.NewRestConfig()
	if err != nil {
		return nil, err
	}
	HorusecPlatformInterface, err := kubernetes.NewHorusecManagerClient(config)
	if err != nil {
		return nil, err
	}
	objectComparator := &kubernetes.ObjectComparator{}
	configService := business.NewConfigService(HorusecPlatformInterface, objectComparator)
	chiRouter, err := router.New(configService, configService)
	if err != nil {
		return nil, err
	}
	return chiRouter, nil
}

// wire.go:

var providers = wire.NewSet(business.NewConfigService, kubernetes.Providers, router.New, wire.Bind(new(core.ConfigurationReader), new(*business.ConfigService)), wire.Bind(new(core.ConfigurationWriter), new(*business.ConfigService)))
