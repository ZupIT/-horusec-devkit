// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package router

import (
	"github.com/ZupIT/horusec-admin/internal/core"
	"github.com/ZupIT/horusec-admin/internal/kubernetes"
	"github.com/ZupIT/horusec-admin/internal/router/api"
	"github.com/ZupIT/horusec-admin/internal/router/handler"
	"github.com/ZupIT/horusec-admin/internal/router/middleware"
	"github.com/ZupIT/horusec-admin/internal/router/page"
	"github.com/ZupIT/horusec-admin/internal/router/render"
	"github.com/ZupIT/horusec-admin/internal/router/static"
	"github.com/go-chi/chi"
	"github.com/google/wire"
)

// Injectors from wire.go:

func newRouter() (*router, error) {
	mux := chi.NewRouter()
	authorizer := middleware.NewAuthorizer()
	rendererRender := render.New()
	auth := handler.NewAuth()
	config, err := kubernetes.NewRestConfig()
	if err != nil {
		return nil, err
	}
	horusecManagerInterface, err := kubernetes.NewHorusecManagerClient(config)
	if err != nil {
		return nil, err
	}
	configService := core.NewConfigService(horusecManagerInterface)
	configEditing := handler.NewConfigEditing(rendererRender, configService)
	configReading := handler.NewConfigReading(rendererRender, configService)
	health := handler.NewHealth()
	handlers := &api.Handlers{
		Auth:          auth,
		ConfigEditing: configEditing,
		ConfigReading: configReading,
		Health:        health,
	}
	set := api.NewSet(handlers)
	assets, err := static.ListAssets()
	if err != nil {
		return nil, err
	}
	defaultRender := handler.NewDefaultRender(rendererRender)
	pageSet := page.NewSet(defaultRender)
	routerRouter := &router{
		Mux:    mux,
		authz:  authorizer,
		render: rendererRender,
		APIs:   set,
		Assets: assets,
		Pages:  pageSet,
	}
	return routerRouter, nil
}

// wire.go:

var providers = wire.NewSet(api.NewSet, chi.NewRouter, core.NewConfigService, handler.NewAuth, handler.NewConfigEditing, handler.NewConfigReading, handler.NewDefaultRender, handler.NewHealth, kubernetes.NewHorusecManagerClient, kubernetes.NewRestConfig, middleware.NewAuthorizer, page.NewSet, render.New, static.ListAssets, wire.Bind(new(handler.ConfigReader), new(*core.ConfigService)), wire.Bind(new(handler.ConfigWriter), new(*core.ConfigService)), wire.Struct(new(api.Handlers), "*"), wire.Struct(new(router), "*"))
