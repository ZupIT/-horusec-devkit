/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/tiagoangelozup/horusec-admin/pkg/api/install/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HorusecManagerSpecLister helps list HorusecManagerSpecs.
// All objects returned here must be treated as read-only.
type HorusecManagerSpecLister interface {
	// List lists all HorusecManagerSpecs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HorusecManagerSpec, err error)
	// HorusecManagerSpecs returns an object that can list and get HorusecManagerSpecs.
	HorusecManagerSpecs(namespace string) HorusecManagerSpecNamespaceLister
	HorusecManagerSpecListerExpansion
}

// horusecManagerSpecLister implements the HorusecManagerSpecLister interface.
type horusecManagerSpecLister struct {
	indexer cache.Indexer
}

// NewHorusecManagerSpecLister returns a new HorusecManagerSpecLister.
func NewHorusecManagerSpecLister(indexer cache.Indexer) HorusecManagerSpecLister {
	return &horusecManagerSpecLister{indexer: indexer}
}

// List lists all HorusecManagerSpecs in the indexer.
func (s *horusecManagerSpecLister) List(selector labels.Selector) (ret []*v1alpha1.HorusecManagerSpec, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HorusecManagerSpec))
	})
	return ret, err
}

// HorusecManagerSpecs returns an object that can list and get HorusecManagerSpecs.
func (s *horusecManagerSpecLister) HorusecManagerSpecs(namespace string) HorusecManagerSpecNamespaceLister {
	return horusecManagerSpecNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HorusecManagerSpecNamespaceLister helps list and get HorusecManagerSpecs.
// All objects returned here must be treated as read-only.
type HorusecManagerSpecNamespaceLister interface {
	// List lists all HorusecManagerSpecs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HorusecManagerSpec, err error)
	// Get retrieves the HorusecManagerSpec from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HorusecManagerSpec, error)
	HorusecManagerSpecNamespaceListerExpansion
}

// horusecManagerSpecNamespaceLister implements the HorusecManagerSpecNamespaceLister
// interface.
type horusecManagerSpecNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HorusecManagerSpecs in the indexer for a given namespace.
func (s horusecManagerSpecNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HorusecManagerSpec, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HorusecManagerSpec))
	})
	return ret, err
}

// Get retrieves the HorusecManagerSpec from the indexer for a given namespace and name.
func (s horusecManagerSpecNamespaceLister) Get(name string) (*v1alpha1.HorusecManagerSpec, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("horusecmanagerspec"), name)
	}
	return obj.(*v1alpha1.HorusecManagerSpec), nil
}
